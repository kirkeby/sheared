#!/usr/bin/env stackless-python

import unittest, sys, traceback, os

print 'Making the world . . .'
if os.system('make >/dev/null 2>&1'):
    raise 'make failed'
print 'Building the world . . .'
if os.system('%s setup.py build >/dev/null 2>&1' % sys.executable):
    raise 'setup.py build failed'
for path in os.listdir('build'):
    if path.startswith('lib.'):
        pythonpath = 'build/' + path
        break
else:
    raise 'No build/lib.$ARCH found.'

if len(sys.argv) == 1:
    sys.path.append('test')
    import tests
    tests = tests.__all__
else:
    tests = sys.argv[1:]
    
#runner = unittest.TextTestRunner()
#for test in tests:
#    module = __import__('tests.%s' % test, globals(), locals(), (test,))
#    if getattr(module, 'skip', 0):
#        print "Skipping tests in %s" % module
#    else:
#        print "Running tests in %s" % module
#        runner.run(module.suite)

for test in tests:
    cmd = 'PYTHONPATH=%s:test %s %s' % (pythonpath,
                                        sys.executable,
                                        'test/tests/%s.py' % test)
    print 'Running tests in %s . . .' % test
    st = os.system(cmd)
    if not os.WIFEXITED(st) or os.WEXITSTATUS(st):
        print 'Bailing out in flames . . .'
        sys.exit(1)
sys.exit(0)
