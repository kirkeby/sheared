#!/usr/bin/env python

from skewed.wsgi import BaseWSGIServer
from skewed.wsgi.misc import IEAcceptHack

class WSGIServer(BaseWSGIServer):
    def __init__(self, application):
        BaseWSGIServer.__init__(self)
        self.application = IEAcceptHack(application)
    def find_application(self, host, path):
        return self.application, '', path

class ApplicationProxy:
    def __init__(self, path):
        i = path.rindex('.')
        module_name, callable_name = path[:i], path[i+1:]
        self.module = __import__(module_name)
        self.callable_name = callable_name

    def __call__(self, *args):
        self.module = reload(self.module)
        callable = eval(self.callable_name, self.module.__dict__)
        return callable(*args)

if __name__ == '__main__':
    import sys
    import logging
    from sheared import reactor

    log = logging.getLogger()
    handler = logging.StreamHandler()
    handler.setFormatter(logging.Formatter())
    log.addHandler(handler)

    if not len(sys.argv) == 3:
        sys.stderr.write("Usage: %s address application\n" % sys.argv[0])
        sys.exit(1)
    
    address = sys.argv[1]
    application = ApplicationProxy(sys.argv[2])

    def bootstrap(reactor):
        server = WSGIServer(application)
        reactor.listen(server, address)

    try:
        reactor.start(bootstrap)
    except KeyboardInterrupt:
        pass
    sys.exit(0)
